<ref *1> Peer {
  core: Core {
    onupdate: [Function: bound _oncoreupdate],
    header: {
      types: [Object],
      userData: [],
      tree: [Object],
      signer: [Object],
      hints: [Object],
      contiguousLength: 1
    },
    crypto: {
      keyPair: [Function (anonymous)],
      validateKeyPair: [Function (anonymous)],
      sign: [Function (anonymous)],
      verify: [Function (anonymous)],
      data: [Function (anonymous)],
      parent: [Function (anonymous)],
      tree: [Function (anonymous)],
      randomBytes: [Function (anonymous)],
      discoveryKey: [Function (anonymous)],
      free: [Function (anonymous)],
      namespace: [Function (anonymous)]
    },
    oplog: Oplog {
      storage: [RandomAccessFile],
      headerEncoding: [Object],
      entryEncoding: [Object],
      flushed: true,
      byteLength: 47,
      length: 1,
      _headers: [Array],
      _pageSize: 4096,
      _entryOffset: 8192
    },
    tree: MerkleTree {
      crypto: [Object],
      fork: 0,
      roots: [Array],
      length: 1,
      byteLength: 133,
      signature: <Buffer 84 0d 0f aa b5 4c fc e2 e5 03 b5 c6 e5 d4 9a 4b 44 7f 72 fc 53 a8 3f 26 f2 5d 82 5d fb 75 de a5 41 80 ed fc e4 5c 2b 05 cd f0 3f aa 70 b8 eb 06 41 7d ... 14 more bytes>,
      storage: [RandomAccessFile],
      unflushed: [Map],
      cache: [MaxCache],
      flushing: null,
      truncated: false,
      truncateTo: 0
    },
    blocks: BlockStore { storage: [RandomAccessFile], tree: [MerkleTree] },
    bitfield: Bitfield {
      pageSize: 32768,
      pages: [BigSparseArray],
      unflushed: [Array],
      storage: [RandomAccessFile],
      resumed: false
    },
    defaultAuth: { sign: undefined, verify: [Function: verify] },
    truncating: 0,
    _maxOplogSize: 65536,
    _autoFlush: 1,
    _verifies: null,
    _verifiesFlushed: null,
    _mutex: Mutex {
      locked: false,
      destroyed: false,
      _destroying: null,
      _destroyError: null,
      _queue: [],
      _enqueue: [Function (anonymous)]
    },
    _legacy: false
  },
  replicator: Replicator {
    key: <Buffer b5 ea 40 43 bd f2 0b dc 53 ad 48 de d2 a6 93 d8 77 01 f9 b7 4d c9 61 3b ee 91 77 af a8 18 d4 65>,
    discoveryKey: <Buffer e5 45 41 79 98 93 ad be 06 4a 3e 12 80 a9 75 0e d5 f1 e3 d9 3b d0 ce c9 dc 7b 7b 42 d8 34 2c ae>,
    core: Core {
      onupdate: [Function: bound _oncoreupdate],
      header: [Object],
      crypto: [Object],
      oplog: [Oplog],
      tree: [MerkleTree],
      blocks: [BlockStore],
      bitfield: [Bitfield],
      defaultAuth: [Object],
      truncating: 0,
      _maxOplogSize: 65536,
      _autoFlush: 1,
      _verifies: null,
      _verifiesFlushed: null,
      _mutex: [Mutex],
      _legacy: false
    },
    eagerUpgrade: true,
    allowFork: true,
    onpeerupdate: [Function: bound _onpeerupdate],
    onupload: [Function: bound _onupload],
    peers: [ [Circular *1] ],
    findingPeers: 0,
    _inflight: InflightTracker { _requests: [], _free: [] },
    _blocks: BlockTracker { _map: Map(0) {} },
    _hashes: BlockTracker { _map: Map(0) {} },
    _queued: [],
    _seeks: [],
    _upgrade: null,
    _reorgs: [],
    _ranges: [],
    _hadPeers: true,
    _ifAvailable: 0,
    _updatesPending: 0,
    _applyingReorg: false
  },
  stream: <ref *2> NoiseSecretStream {
    _events: [Object: null prototype] {
      close: [Array],
      open: [Function (anonymous)],
      connect: [Function (anonymous)],
      data: [Function: bound _ondata],
      end: [Function: bound _onend],
      error: [Function: noop]
    },
    _eventsCount: 6,
    _maxListeners: undefined,
    _duplexState: 132240,
    _readableState: ReadableState {
      stream: [Circular *2],
      queue: [FastFIFO],
      highWaterMark: 16384,
      buffered: 0,
      error: null,
      pipeline: null,
      byteLength: [Function: defaultByteLength],
      map: null,
      pipeTo: null,
      afterRead: [Function: bound afterRead],
      afterUpdateNextTick: [Function: bound updateReadNT]
    },
    _writableState: WritableState {
      stream: [Circular *2],
      queue: [FastFIFO],
      highWaterMark: 16384,
      buffered: 0,
      error: null,
      pipeline: null,
      byteLength: [Function: defaultByteLength],
      map: [Function: toBuffer],
      afterWrite: [Function: bound afterWrite],
      afterUpdateNextTick: [Function: bound updateWriteNT]
    },
    noiseStream: [Circular *2],
    isInitiator: true,
    rawStream: UDXStream {
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _duplexState: 4359312,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      udx: [UDX],
      socket: [UDXSocket],
      _handle: <Buffer 18 80 77 5b 08 7b cb 8b 02 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 57 82 13 01 00 00 00 08 5b ... 582 more bytes>,
      _view: [Uint32Array],
      _wreqs: [Array],
      _wfree: [],
      _sreqs: [],
      _sfree: [],
      _closed: false,
      _mtuExceeded: false,
      _readBuffer: <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ... 67370 more bytes>,
      _onwrite: null,
      _ondestroy: null,
      _firewall: [Function: firewall],
      id: 1534558232,
      remoteId: 2345368328,
      remoteHost: '192.168.1.187',
      remoteFamily: 4,
      remotePort: 49737,
      userData: null,
      [Symbol(kCapture)]: false
    },
    publicKey: <Buffer 67 19 6a 0c cc 82 4d d7 f6 85 0d 11 da 67 ec 64 10 0e 60 6e 01 15 4f 08 4b d7 d1 e0 08 14 55 10>,
    remotePublicKey: <Buffer 18 c1 0a af 0c 23 e9 ee 5e 91 7f 7b c7 6c f4 0e d3 9d eb 23 5b 40 68 75 7f 4b 70 51 e8 5a b1 ed>,
    handshakeHash: <Buffer 08 3d 9e a1 08 69 bf 03 58 8b 01 1c e5 d3 92 2a 5c c3 a7 66 5a 3c 9d 00 66 fe 59 ab 36 b1 07 f3 e4 b2 5f b7 fc 43 d9 00 a7 69 29 32 e2 99 af 77 b9 8c ... 14 more bytes>,
    userData: Protomux {
      isProtomux: true,
      stream: [Circular *2],
      corked: 1,
      _alloc: [Function: bound alloc],
      _safeDestroyBound: [Function: bound _safeDestroy],
      _remoteBacklog: 0,
      _buffered: 0,
      _paused: false,
      _remote: [Array],
      _local: [Array],
      _free: [],
      _batch: [Array],
      _batchState: [Object],
      _infos: [Map],
      _notify: [Map]
    },
    opened: Promise { true },
    _rawStream: UDXStream {
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _duplexState: 4359312,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      udx: [UDX],
      socket: [UDXSocket],
      _handle: <Buffer 18 80 77 5b 08 7b cb 8b 02 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 57 82 13 01 00 00 00 08 5b ... 582 more bytes>,
      _view: [Uint32Array],
      _wreqs: [Array],
      _wfree: [],
      _sreqs: [],
      _sfree: [],
      _closed: false,
      _mtuExceeded: false,
      _readBuffer: <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ... 67370 more bytes>,
      _onwrite: null,
      _ondestroy: null,
      _firewall: [Function: firewall],
      id: 1534558232,
      remoteId: 2345368328,
      remoteHost: '192.168.1.187',
      remoteFamily: 4,
      remotePort: 49737,
      userData: null,
      [Symbol(kCapture)]: false
    },
    _handshake: null,
    _handshakePattern: null,
    _handshakeDone: null,
    _state: 0,
    _len: 0,
    _tmp: 1,
    _message: null,
    _openedDone: null,
    _startDone: null,
    _drainDone: null,
    _outgoingPlain: <Buffer 08 02 00>,
    _outgoingWrapped: <Buffer 00 00 00 00 08 02 00 00 30 00 00 00 01 00 00 00 2c 20 00 80 06 00 00>,
    _utp: null,
    _setup: false,
    _ended: 2,
    _encrypt: Push {
      key: <Buffer b8 64 4a 0e 37 04 12 c2 14 71 49 92 b3 70 7f a3 e7 56 59 d3 c1 bb 3e df c8 c2 6b 62 52 e0 07 bf>,
      state: <Buffer 9e 8d 52 9d 39 5a c8 99 4e 96 58 97 5c dd 16 7c 89 ac 7f 9b 4e 33 8b 6e 7d 6d cc c5 15 00 44 ed 05 00 00 00 87 98 ce 90 67 e6 f6 3e 00 00 00 00 00 00 ... 2 more bytes>,
      header: <Buffer aa 11 8e 83 d0 88 10 7f 37 74 21 bc 91 67 3a 88 7b 1b 28 b5 97 17 8a e9>
    },
    _decrypt: Pull {
      key: <Buffer 76 2a cc 4e 25 ab 6e 29 b1 72 8d d5 9b d2 78 f6 8c be ae ca d1 21 62 bb d3 e8 98 3d 37 0c 83 f8>,
      state: <Buffer ec cb 0c 52 00 e8 cb eb 50 7e 20 16 d1 c9 3f 0b 08 36 38 bb 71 83 45 09 9c 04 a9 69 05 58 73 5c 02 00 00 00 c9 d3 42 fd 66 b4 61 4c 00 00 00 00 00 00 ... 2 more bytes>,
      final: false
    },
    _timeout: null,
    _timeoutMs: 0,
    _keepAlive: Timer {
      ms: 5000,
      ontimeout: [Function: sendKeepAlive],
      context: [Circular *2],
      interval: true,
      done: false,
      _timer: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 10882,
        _onTimeout: [Function: callInterval],
        _timerArgs: [Array],
        _repeat: 5000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 993,
        [Symbol(triggerId)]: 0
      }
    },
    _keepAliveMs: 5000,
    [Symbol(kCapture)]: false
  },
  protomux: <ref *3> Protomux {
    isProtomux: true,
    stream: <ref *2> NoiseSecretStream {
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _duplexState: 132240,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      noiseStream: [Circular *2],
      isInitiator: true,
      rawStream: [UDXStream],
      publicKey: <Buffer 67 19 6a 0c cc 82 4d d7 f6 85 0d 11 da 67 ec 64 10 0e 60 6e 01 15 4f 08 4b d7 d1 e0 08 14 55 10>,
      remotePublicKey: <Buffer 18 c1 0a af 0c 23 e9 ee 5e 91 7f 7b c7 6c f4 0e d3 9d eb 23 5b 40 68 75 7f 4b 70 51 e8 5a b1 ed>,
      handshakeHash: <Buffer 08 3d 9e a1 08 69 bf 03 58 8b 01 1c e5 d3 92 2a 5c c3 a7 66 5a 3c 9d 00 66 fe 59 ab 36 b1 07 f3 e4 b2 5f b7 fc 43 d9 00 a7 69 29 32 e2 99 af 77 b9 8c ... 14 more bytes>,
      userData: [Circular *3],
      opened: [Promise],
      _rawStream: [UDXStream],
      _handshake: null,
      _handshakePattern: null,
      _handshakeDone: null,
      _state: 0,
      _len: 0,
      _tmp: 1,
      _message: null,
      _openedDone: null,
      _startDone: null,
      _drainDone: null,
      _outgoingPlain: <Buffer 08 02 00>,
      _outgoingWrapped: <Buffer 00 00 00 00 08 02 00 00 30 00 00 00 01 00 00 00 2c 20 00 80 06 00 00>,
      _utp: null,
      _setup: false,
      _ended: 2,
      _encrypt: [Push],
      _decrypt: [Pull],
      _timeout: null,
      _timeoutMs: 0,
      _keepAlive: [Timer],
      _keepAliveMs: 5000,
      [Symbol(kCapture)]: false
    },
    corked: 1,
    _alloc: [Function: bound alloc],
    _safeDestroyBound: [Function: bound _safeDestroy],
    _remoteBacklog: 0,
    _buffered: 0,
    _paused: false,
    _remote: [ [Object] ],
    _local: [ [Channel], [Channel], [Channel], [Channel] ],
    _free: [],
    _batch: [ [Object], [Object] ],
    _batchState: { buffer: null, start: 0, end: 13 },
    _infos: Map(8) {
      'hypercore/alpha##6ab4bb3352cd7617c5b6f133b3d9c59ee18de1d6965407cabfd3d87c8e52d2b5' => [Object],
      'hypercore##6ab4bb3352cd7617c5b6f133b3d9c59ee18de1d6965407cabfd3d87c8e52d2b5' => [Object],
      'hypercore/alpha##a0602ecf1d7efcba8b29f7418290698ca55011675657eb359be3cac9d8a496e6' => [Object],
      'hypercore##a0602ecf1d7efcba8b29f7418290698ca55011675657eb359be3cac9d8a496e6' => [Object],
      'hypercore/alpha##e54541799893adbe064a3e1280a9750ed5f1e3d93bd0cec9dc7b7b42d8342cae' => [Object],
      'hypercore##e54541799893adbe064a3e1280a9750ed5f1e3d93bd0cec9dc7b7b42d8342cae' => [Object],
      'hypercore/alpha##c314e86ebd5ed1b12b45f66e5b5d4889f1351e726a56858c57b4bdd582bf16a7' => [Object],
      'hypercore##c314e86ebd5ed1b12b45f66e5b5d4889f1351e726a56858c57b4bdd582bf16a7' => [Object]
    },
    _notify: Map(5) {
      'hypercore/alpha##' => [Function: ondiscoverykey],
      'hypercore/alpha##6ab4bb3352cd7617c5b6f133b3d9c59ee18de1d6965407cabfd3d87c8e52d2b5' => [Function: bound _makePeer],
      'hypercore/alpha##a0602ecf1d7efcba8b29f7418290698ca55011675657eb359be3cac9d8a496e6' => [Function: bound _makePeer],
      'hypercore/alpha##e54541799893adbe064a3e1280a9750ed5f1e3d93bd0cec9dc7b7b42d8342cae' => [Function: bound _makePeer],
      'hypercore/alpha##c314e86ebd5ed1b12b45f66e5b5d4889f1351e726a56858c57b4bdd582bf16a7' => [Function: bound _makePeer]
    }
  },
  remotePublicKey: <Buffer 18 c1 0a af 0c 23 e9 ee 5e 91 7f 7b c7 6c f4 0e d3 9d eb 23 5b 40 68 75 7f 4b 70 51 e8 5a b1 ed>,
  channel: Channel {
    userData: [Circular *1],
    protocol: 'hypercore/alpha',
    aliases: [ 'hypercore' ],
    id: <Buffer e5 45 41 79 98 93 ad be 06 4a 3e 12 80 a9 75 0e d5 f1 e3 d9 3b d0 ce c9 dc 7b 7b 42 d8 34 2c ae>,
    handshake: {
      capability: <Buffer ec 4d 37 b2 7b c7 91 5d 11 3c a2 2f 79 48 18 66 24 4f 9e b9 7d e2 74 9d e8 53 a2 5a 2f 83 22 17>
    },
    messages: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    opened: true,
    closed: false,
    destroyed: false,
    onopen: [Function: onwireopen],
    onclose: [Function: onwireclose],
    ondestroy: [Function: noop],
    _handshake: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    _mux: <ref *3> Protomux {
      isProtomux: true,
      stream: [NoiseSecretStream],
      corked: 1,
      _alloc: [Function: bound alloc],
      _safeDestroyBound: [Function: bound _safeDestroy],
      _remoteBacklog: 0,
      _buffered: 0,
      _paused: false,
      _remote: [Array],
      _local: [Array],
      _free: [],
      _batch: [Array],
      _batchState: [Object],
      _infos: [Map],
      _notify: [Map]
    },
    _info: {
      key: 'hypercore/alpha##e54541799893adbe064a3e1280a9750ed5f1e3d93bd0cec9dc7b7b42d8342cae',
      protocol: 'hypercore/alpha',
      aliases: [Array],
      id: <Buffer e5 45 41 79 98 93 ad be 06 4a 3e 12 80 a9 75 0e d5 f1 e3 d9 3b d0 ce c9 dc 7b 7b 42 d8 34 2c ae>,
      pairing: 0,
      opened: 1,
      incoming: [],
      outgoing: []
    },
    _localId: 3,
    _remoteId: 1,
    _active: 0,
    _extensions: null,
    _decBound: [Function: bound _dec],
    _decAndDestroyBound: [Function: bound _decAndDestroy]
  },
  wireSync: {
    type: 0,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwiresync],
    recv: [Function: recv],
    send: [Function: send]
  },
  wireRequest: {
    type: 1,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwirerequest],
    recv: [Function: recv],
    send: [Function: send]
  },
  wireCancel: null,
  wireData: {
    type: 3,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwiredata],
    recv: [Function: recv],
    send: [Function: send]
  },
  wireNoData: {
    type: 4,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwirenodata],
    recv: [Function: recv],
    send: [Function: send]
  },
  wireWant: {
    type: 5,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwirewant],
    recv: [Function: recv],
    send: [Function: send]
  },
  wireUnwant: {
    type: 6,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwireunwant],
    recv: [Function: recv],
    send: [Function: send]
  },
  wireBitfield: {
    type: 7,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwirebitfield],
    recv: [Function: recv],
    send: [Function: send]
  },
  wireRange: {
    type: 8,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwirerange],
    recv: [Function: recv],
    send: [Function: send]
  },
  wireExtension: {
    type: 9,
    encoding: {
      preencode: [Function: preencode],
      encode: [Function: encode],
      decode: [Function: decode]
    },
    onmessage: [Function: onwireextension],
    recv: [Function: recv],
    send: [Function: send]
  },
  inflight: 0,
  maxInflight: 32,
  dataProcessing: 0,
  canUpgrade: true,
  needsSync: false,
  syncsProcessing: 0,
  remoteOpened: true,
  remoteBitfield: RemoteBitfield {
    pageSize: 32768,
    pages: BigSparseArray { tiny: [TinyArray], maxLength: 4096, factor: 1 }
  },
  remoteFork: 0,
  remoteLength: 0,
  remoteCanUpgrade: false,
  remoteUploading: true,
  remoteDownloading: true,
  remoteSynced: false,
  segmentsWanted: Set(0) {},
  broadcastedNonSparse: true,
  lengthAcked: 0,
  extensions: Map(0) {},
  lastExtensionSent: '',
  lastExtensionRecv: ''
}